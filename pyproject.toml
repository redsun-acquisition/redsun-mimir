[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "redsun-mimir"
dynamic = ["version"]
description = "Plugin bundle for the OpenUC2 'Mimir' microscope"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  { name = "Jacopo Abramo", email = "jacopo.abramo@gmail.com" },
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering"
]
requires-python = ">=3.10"
dependencies = [
    "sunflare>=0.6.1",
    "napari>=0.6.4",
    "in-n-out>=0.2.1",
    "superqt>=0.7.4",
]

[project.optional-dependencies]
pyqt = [
    "napari[pyqt6]>=0.6.4",
    "sunflare[pyqt]",
]
pyside = [
    "napari[pyside6]>=0.6.4",
    "sunflare[pyside]",
]
microscope = [
    "microscope>=0.7.0"
]
docs = [
    "sphinx",
    "pydata-sphinx-theme",
    "sphinx-design",
    "myst-parser"
]
uc2 = [
    "pyserial",
    "pymmcore-plus"
]
all = [
    "redsun-mimir[microscope,uc2]",
]
dev = [
    "redsun-mimir[all,pyqt]",
    "ruff",
    "mypy",
    "pytest",  # https://docs.pytest.org/en/latest/contents.html
    "pytest-cov",  # https://pytest-cov.readthedocs.io/en/latest/
    "pytest-qt",
    "pre-commit",
]

[project.urls]
"Bug Tracker" = "https://github.com/redsun-acquisition/redsun-mimir/issues"
"Documentation" = "https://github.com/redsun-acquisition/redsun-mimir#README.md"
"Source Code" = "https://github.com/redsun-acquisition/redsun-mimir"
"User Support" = "https://github.com/redsun-acquisition/redsun-mimir/issues"

[project.scripts]
mimir = "redsun_mimir.__main__:main"

[project.entry-points."redsun.plugins"]
redsun-mimir = "redsun.yaml"

[tool.coverage.run]
source = ["redsun_mimir"]
omit = [
    "src/redsun_mimir/tests/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "if TYPE_CHECKING:",
    "@overload",
    "class .*Protocol",
    "pragma: no cover",
    "except ImportError",
    "except PackageNotFoundError",
    "raise NotImplementedError()",
]
omit = [
    "src/redsun_mimir/__main__.py",
    "src/redsun_mimir/configurations/**",
]

[tool.mypy]
files = "src/**/*.py"
disable_error_code = ["import-untyped", "no-untyped-call"]
pretty = true

# Use strict defaults
strict = true
warn_unreachable = true
warn_no_return = true

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]

[tool.ruff]
target-version = "py310"
extend-exclude = ["docs"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    "D",    # https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "I",    # https://docs.astral.sh/ruff/rules/#isort-i
    "TC",   # https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc
    "FA102" # https://docs.astral.sh/ruff/rules/future-required-type-annotation/
]
ignore = [
    "D100", # https://docs.astral.sh/ruff/rules/undocumented-public-module/
    "D104", # https://docs.astral.sh/ruff/rules/undocumented-public-package/
    "D103", # https://docs.astral.sh/ruff/rules/undocumented-public-function/
    "D107", # https://docs.astral.sh/ruff/rules/undocumented-public-init/
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = ["src", "tests"]

[tool.hatch.build.targets.wheel]
only-include = ["src/redsun_mimir"]
sources = ["src"]
